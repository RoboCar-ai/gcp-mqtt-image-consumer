const assert = require('assert');

const {Image} = require('../../app/models/Image_pb');


describe('image serialization tests', () => {
  it('should get name', () => {
    const image = new Image();
    const data = new Uint8Array(Buffer.from("tester", 'utf8'));
    const name = 'test';
    image.setName(name);
    image.setData(data);
    const test = image.serializeBinary();
    console.log(test);

    assert.equal(Image.deserializeBinary(test).getName(), name);
    assert.deepEqual(Image.deserializeBinary(test).getData(), data);
  });
  it('should decode base64 string', () => {
    const payload = `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`;
    const buff = new Buffer.from(payload, 'base64');
    const test = Array.from(buff);

    assert.equal(Image.deserializeBinary(test).getName(), 'test');
  })

});
